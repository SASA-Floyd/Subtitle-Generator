00:00:00.000,00:00:02.130


00:00:02.130,00:00:05.150
이 프로그램은 소리 블록 두 개뿐이지만

00:00:05.150,00:00:08.060
가끔은 어떤 조건 아래에서

00:00:08.060,00:00:10.140
반복하길 원하는 프로그램의 부분이

00:00:10.140,00:00:12.080
있을 수도 있습니다

00:00:12.080,00:00:16.060
반복문은 여기 있습니다

00:00:16.060,00:00:19.030
전체 메뉴에서 보자면

00:00:19.030,00:00:20.150
흐름 탭 안에 있습니다

00:00:20.150,00:00:23.110
블록을 클릭해서 아무 데나 놓겠습니다

00:00:23.110,00:00:25.040
위치는 상관없습니다

00:00:25.040,00:00:26.060
여기에 놓겠습니다

00:00:26.060,00:00:29.180
보시는 것처럼 반복문 안은 비어있습니다

00:00:29.180,00:00:33.070
그래서 프로그램을 실행해도
소리 블록에 도달하지 못합니다

00:00:33.070,00:00:35.010
반복문을 빠져나오지 못하기 때문이죠

00:00:35.010,00:00:38.020
프로그램이 제대로 작동하도록

00:00:38.020,00:00:39.170
소리 블록을 반복문 안에 넣겠습니다

00:00:39.170,00:00:42.000
잘 작동하는지 확인하기 위해

00:00:42.000,00:00:44.110
실행해보겠습니다

00:00:44.110,00:00:49.080
실행해보겠습니다

00:00:49.080,00:00:51.180
조금 더 흥미로운 일을 해보겠습니다

00:00:51.180,00:00:55.220
어떤 센서 조건 아래에서

00:00:55.220,00:00:59.040
반복문을 종료시키고 싶으면 어떡할까요?

00:00:59.040,00:01:03.070
여기를 클릭하고 센서를 선택합니다

00:01:03.070,00:01:05.080
여러 설정이 생깁니다

00:01:05.080,00:01:08.110
처음엔 반복문을 제어할 때 어떤 센서를

00:01:08.110,00:01:11.040
사용할지를 선택해야 합니다

00:01:11.040,00:01:14.220
지금은 터치 센서로 두겠습니다

00:01:14.220,00:01:22.120
그리고 터치 센서를 
2번 포트에 연결하겠습니다

00:01:22.120,00:01:26.150
저는 2번을 쓰고 있지만 어떤
포트든지 상관없습니다

00:01:26.150,00:01:31.120
또한 센서가 연결된 포트를 선택해야 합니다

00:01:31.120,00:01:35.030
마지막으로는 반복문의 종료 조건을

00:01:35.030,00:01:37.010
설정해야 합니다

00:01:37.010,00:01:40.110
프로그램을 실행하면 반복문이 실행됩니다

00:01:40.110,00:01:43.100
반복문이 한 번 실행될 때마다

00:01:43.100,00:01:44.140
버튼이 눌렸는지 확인합니다

00:01:44.140,00:01:48.100
눌리지 않았다면 다시 반복문을 실행합니다

00:01:48.100,00:01:52.060
눌렸다면 반복문을 종료합니다

00:01:52.060,00:01:55.000
실행해서 잘 작동하는지 보겠습니다

00:01:55.000,00:01:57.050
[BEEPING]

00:01:57.050,00:02:02.220
셋을 세고 버튼을 누르겠습니다
하나 둘 셋

00:02:02.220,00:02:04.180
잘 작동합니다

00:02:04.180,00:02:08.040
심지어는 색깔 센서로도 반복문을
제어할 수 있기 때문에

00:02:08.040,00:02:11.080
더욱 흥미롭습니다

00:02:11.080,00:02:13.190
색깔 센서가 빨간색을 감지했을 때나

00:02:13.190,00:02:18.080
소리 센서가 박수 소리를 감지했을 때
종료되도록 할 수 있습니다

00:02:18.080,00:02:20.190
[박수]

00:02:20.190,00:02:22.200
또한 시간에 따라서 반복문을

00:02:22.200,00:02:25.120
제어할 수도 있습니다

00:02:25.120,00:02:28.040
몇 초 동안 작동할지를 
설정할 수 있다는 것이죠

00:02:28.040,00:02:31.040
시간 아래에 몇 번 작동할지를

00:02:31.040,00:02:33.050
설정하는 개수 항목이 있습니다

00:02:33.050,00:02:35.220
반복문의 끝에 다다르고 시작으로
되돌아가는 것을

00:02:35.220,00:02:38.070
한 번으로 간주합니다

00:02:38.070,00:02:41.230
따라서 개수를 2로 두면 
두 번 실행되게 됩니다

00:02:41.230,00:02:46.080
반복문을 제어하는 마지막 방법은
논리입니다

00:02:46.080,00:02:48.020
논리를 선택하면

00:02:48.020,00:02:50.050
참 또는 거짓을 전달해줘야 합니다

00:02:50.050,00:02:53.170
이곳에 직접 입력해줘야 하는 값입니다

00:02:53.170,00:02:57.040
이는 다른 영상에서 설명하겠습니다

00:02:57.040,00:02:59.110
반복문의 제어를 제외하고

00:02:59.110,00:03:01.050
알아야 할 마지막 것은

00:03:01.050,00:03:05.020
반복문은 중첩이 가능하다는 것입니다

00:03:05.020,00:03:06.210
중첩이라는 것은

00:03:06.210,00:03:09.200
반복문 안에 다른 반복문을 
넣을 수 있다는 것입니다

00:03:09.200,00:03:11.220
여기서 소리를 활용하면 편리한데

00:03:11.220,00:03:15.130
무슨 일이 일어나는지를 쉽게
들을 수 있기 때문입니다

00:03:15.130,00:03:19.200
먼저 반복문 안에 소리 블록을 넣겠습니다

00:03:19.200,00:03:24.040
프로그램이 실행되면 반복문을 실행하고

00:03:24.040,00:03:25.140
소리 블록을 작동 시켜

00:03:25.140,00:03:28.040
0.5초 동안 소리를 내고

00:03:28.040,00:03:30.190
0.5초 동안 두 번째 소리를 내고

00:03:30.190,00:03:34.110
내부 반복문으로 들어가게 됩니다
내부 반복문은 현재로서는

00:03:34.110,00:03:37.100
영원히 돌도록 설정되어있는데
이는 별로 좋지 않습니다

00:03:37.100,00:03:39.100
반복문을 탈출하지 못하기 때문이죠

00:03:39.100,00:03:43.010
그래서 내부 반복문이 두 번 실행되도록

00:03:43.010,00:03:46.200
반복 횟수를 2로 설정하겠습니다

00:03:46.200,00:03:49.060
내부 반복문 안에는 더 낮은 소리를 내는

00:03:49.060,00:03:53.230
소리 블록을 넣었습니다

00:03:53.230,00:03:57.130
이 반복문이 실행되는 것을
들을 수 있도록 하기 위함이죠

00:03:57.130,00:04:00.210
반복문이 두 번 반복된 뒤 탈출해

00:04:00.210,00:04:03.220
메인 반복문의 끝에 도달해

00:04:03.220,00:04:07.020
다시 처음으로 돌아가 반복됩니다

00:04:07.020,00:04:10.060
이제 프로그램을 실행해

00:04:10.060,00:04:13.040
무슨 일이 일어나는지 들어보겠습니다

00:04:13.040,00:04:20.060
[BEEPING]

00:04:20.060,00:04:22.060
이 낮은음이 들리면

00:04:22.060,00:04:26.180
내부 반복문에 진입했다는 것을
알 수 있습니다

00:04:26.180,00:04:29.010
중첩은 여러 번 가능합니다

00:04:29.010,00:04:32.140
이렇게 두 개를 붙여놓을 수도 있고

00:04:32.140,00:04:36.040
세 번째 반복문을 여기 안에 
넣을 수도 있습니다

00:04:36.040,00:04:38.030
이런 식으로 계속 가능합니다

00:04:38.030,00:04:42.070
중첩과 제어를 통해서 반복에 관한

00:04:42.070,00:04:46.070
대부분의 작업을 다 할 수 있습니다

